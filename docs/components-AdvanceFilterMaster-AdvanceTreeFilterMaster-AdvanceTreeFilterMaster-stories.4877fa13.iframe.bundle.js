"use strict";(self.webpackChunkreact_3layer_ui_components=self.webpackChunkreact_3layer_ui_components||[]).push([[6862],{"./src/components/Input/InputText/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>_InputText__WEBPACK_IMPORTED_MODULE_0__.A});var _InputText__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/components/Input/InputText/InputText.tsx")},"./src/components/Tree/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>_Tree__WEBPACK_IMPORTED_MODULE_0__.A});var _Tree__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/components/Tree/Tree.tsx")},"./src/config/consts.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{cA:()=>ASSETS_IMAGE,k5:()=>STANDARD_DATE_FORMAT_INVERSE_DEFAULT,o3:()=>DEBOUNCE_TIME_300,y4:()=>DEFAULT_DATETIME_VALUE});var dayjs__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/dayjs/dayjs.min.js"),dayjs__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(dayjs__WEBPACK_IMPORTED_MODULE_0__),process=__webpack_require__("./node_modules/process/browser.js");const ASSETS_IMAGE="./assets/img",STANDARD_DATE_FORMAT_INVERSE_DEFAULT=(process.env.REACT_APP_BASE_API_URL??window.location.origin,"DD/MM/YYYY"),DEFAULT_DATETIME_VALUE="0001-01-01T00:00:00",DEBOUNCE_TIME_300=(dayjs__WEBPACK_IMPORTED_MODULE_0___default()().format("Z"),300)},"./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/AdvanceFilterMaster/AdvanceTreeFilterMaster/AdvanceTreeFilterMaster.scss":(module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/sourceMaps.js"),_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,".advance-tree-filter-master__container{width:100%;position:relative}.advance-tree-filter-master__container .button-toggle{width:fit-content}.advance-tree-filter-master__container .button-toggle:hover{background-color:var(--palette-gray-20)}.advance-tree-filter-master__container .button-toggle.active-bg{background-color:var(--palette-gray-30) !important}.advance-tree-filter-master__container .ant-checkbox-checked .ant-checkbox-inner{background-color:var(--color-text);border-color:var(--color-text)}.advance-tree-filter-master__container .filter-active{color:var(--color-primary)}.advance-tree-filter-master__container .filter-active span{border-bottom:1px solid var(--color-primary)}.advance-tree-filter-master__container .advance-tree-filter-master__title{font-style:normal;font-weight:normal;font-size:14px;line-height:16px;display:flex;align-items:center;letter-spacing:.16px}.advance-tree-filter-master__container .advance-tree-filter-master__title .filter-title{margin-right:7px}.advance-tree-filter-master__container .ant-checkbox:hover .ant-checkbox-inner,.advance-tree-filter-master__container .ant-checkbox-checked:hover .ant-checkbox-inner{border-color:var(--color-text)}.advance-tree-filter-master__container .advance-tree-filter-master__box-search{min-width:280px;width:auto;height:auto;margin-top:5px;position:absolute;z-index:999;box-shadow:0px 0px 2px rgba(0,0,0,.2),0px 2px 10px rgba(0,0,0,.1)}.advance-tree-filter-master__container .advance-tree-filter-master__box-search .advance-tree-filter-master__input{width:100%;background-color:var(--palette-gray-10)}.advance-tree-filter-master__container .advance-tree-filter-master__box-search .advance-tree-filter-master__input .input-text__wrapper .input-text__container{background-color:#fff}.advance-tree-filter-master__container .advance-tree-filter-master__box-search .advance-tree-filter-master__input .input-text__wrapper .input-text__container:not(:focus-within){outline:none}.advance-tree-filter-master__container .advance-tree-filter-master__box-search .advance-tree-filter-master__list{width:100%;z-index:999}","",{version:3,sources:["webpack://./src/components/AdvanceFilterMaster/AdvanceTreeFilterMaster/AdvanceTreeFilterMaster.scss"],names:[],mappings:"AACA,uCACE,UAAA,CAEA,iBAAA,CAEA,sDACE,iBAAA,CAEA,4DACE,uCAAA,CAGF,gEACE,kDAAA,CAKF,iFACE,kCAAA,CACA,8BAAA,CAIJ,sDACE,0BAAA,CAEA,2DACE,4CAAA,CAIJ,0EACE,iBAAA,CACA,kBAAA,CACA,cAAA,CACA,gBAAA,CACA,YAAA,CACA,kBAAA,CACA,oBAAA,CAEA,wFACE,gBAAA,CAMF,sKACE,8BAAA,CAIJ,+EACE,eAAA,CACA,UAAA,CACA,WAAA,CACA,cAAA,CACA,iBAAA,CACA,WAAA,CACA,iEAAA,CAEA,kHACE,UAAA,CACA,uCAAA,CAGE,8JACE,qBAAA,CAEA,iLACE,YAAA,CAMR,iHACE,UAAA,CACA,WAAA",sourcesContent:["/* Style for TreeSelect.tsx */\r\n.advance-tree-filter-master__container {\r\n  width: 100%;\r\n\r\n  position: relative;\r\n\r\n  .button-toggle {\r\n    width: fit-content;\r\n\r\n    &:hover {\r\n      background-color: var(--palette-gray-20);\r\n    }\r\n\r\n    &.active-bg {\r\n      background-color: var(--palette-gray-30) !important;\r\n    }\r\n  }\r\n\r\n  .ant-checkbox-checked {\r\n    .ant-checkbox-inner {\r\n      background-color: var(--color-text);\r\n      border-color: var(--color-text);\r\n    }\r\n  }\r\n\r\n  .filter-active {\r\n    color: var(--color-primary);\r\n\r\n    span {\r\n      border-bottom: 1px solid var(--color-primary);\r\n    }\r\n  }\r\n\r\n  .advance-tree-filter-master__title {\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    font-size: 14px;\r\n    line-height: 16px;\r\n    display: flex;\r\n    align-items: center;\r\n    letter-spacing: 0.16px;\r\n\r\n    .filter-title {\r\n      margin-right: 7px;\r\n    }\r\n  }\r\n\r\n  .ant-checkbox:hover,\r\n  .ant-checkbox-checked:hover {\r\n    .ant-checkbox-inner {\r\n      border-color: var(--color-text);\r\n    }\r\n  }\r\n\r\n  .advance-tree-filter-master__box-search {\r\n    min-width: 280px;\r\n    width: auto;\r\n    height: auto;\r\n    margin-top: 5px;\r\n    position: absolute;\r\n    z-index: 999;\r\n    box-shadow: 0px 0px 2px rgba(0, 0, 0, 0.2), 0px 2px 10px rgba(0, 0, 0, 0.1);\r\n\r\n    .advance-tree-filter-master__input {\r\n      width: 100%;\r\n      background-color: var(--palette-gray-10);\r\n\r\n      .input-text__wrapper {\r\n        .input-text__container {\r\n          background-color: white;\r\n\r\n          &:not(:focus-within) {\r\n            outline: none;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    .advance-tree-filter-master__list {\r\n      width: 100%;\r\n      z-index: 999;\r\n    }\r\n  }\r\n}"],sourceRoot:""}]);const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"./src/components/AdvanceFilterMaster/AdvanceTreeFilterMaster/AdvanceTreeFilterMaster.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>AdvanceTreeFilterMaster_stories});var react=__webpack_require__("./node_modules/react/index.js"),dist=__webpack_require__("./node_modules/@storybook/addon-docs/dist/index.mjs"),react_3layer_advance_filters_dist=__webpack_require__("./node_modules/react-3layer-advance-filters/dist/index.js"),react_3layer_common=__webpack_require__("./node_modules/react-3layer-common/index.js"),Observable=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Observable.js"),v4=__webpack_require__("./node_modules/uuid/dist/esm-browser/v4.js"),Tree=__webpack_require__("./src/components/Tree/index.ts"),useDebounceFn=__webpack_require__("./node_modules/ahooks/es/useDebounceFn/index.js"),consts=__webpack_require__("./src/config/consts.ts"),common_service=__webpack_require__("./src/services/common-service.ts"),InputText=__webpack_require__("./src/components/Input/InputText/index.ts"),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),bucket_2=__webpack_require__("./node_modules/@carbon/icons-react/es/generated/bucket-2.js"),bucket_14=__webpack_require__("./node_modules/@carbon/icons-react/es/generated/bucket-14.js"),injectStylesIntoStyleTag=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),AdvanceTreeFilterMaster=__webpack_require__("./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/AdvanceFilterMaster/AdvanceTreeFilterMaster/AdvanceTreeFilterMaster.scss"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(AdvanceTreeFilterMaster.A,options);AdvanceTreeFilterMaster.A&&AdvanceTreeFilterMaster.A.locals&&AdvanceTreeFilterMaster.A.locals;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function filterReducer(state,action){if("UPDATE"===action.type)return action.data}function AdvanceTreeFilterMaster_AdvanceTreeFilterMaster_AdvanceTreeFilterMaster(props){const{listItem,item,checkStrictly,searchProperty,searchType,checkable,selectable,disabled,classFilter:ClassFilter,valueFilter,placeHolder,selectedKey,onlySelectLeaf,getTreeData,onChange,render,treeTitleRender,preferOptions,label,maxLength,maxLengthItem,className,buildTree,keyField}=props,inputRef=react.useRef(null),componentId=react.useMemo((()=>(0,v4.A)()),[]),[expanded,setExpanded]=react.useState(!1),listIds=react.useMemo((()=>item?[item?.[keyField]]:listItem?listItem.map((currentItem=>currentItem?.[keyField])):[]),[item,keyField,listItem]),wrapperRef=react.useRef(null),[filter,dispatch]=react.useReducer(filterReducer,{...new ClassFilter,valueFilter}),{run}=(0,useDebounceFn.A)((searchTerm=>{const cloneFilter={...filter};searchType?cloneFilter[searchProperty][searchType]=searchTerm:cloneFilter[searchProperty]=searchTerm,cloneFilter.isFilterTree=!0,listIds.length>1?cloneFilter.activeNodeIds={...new react_3layer_advance_filters_dist.s_,in:[...listIds]}:cloneFilter.activeNodeId={...new react_3layer_advance_filters_dist.s_,equal:listIds.length>0?listIds[0]:void 0},dispatch({type:"UPDATE",data:cloneFilter})}),{wait:consts.o3}),handleSearchChange=react.useCallback((searchTerm=>{run(searchTerm)}),[run]),handleCloseList=react.useCallback((()=>{setExpanded(!1)}),[]),handleExpand=react.useCallback((event=>{if(!disabled){if(!expanded){setTimeout((()=>{inputRef.current.children[0].children[0].focus()}),400);const filterData=valueFilter?{...valueFilter}:new ClassFilter;dispatch({type:"UPDATE",data:filterData})}setExpanded(!0)}}),[ClassFilter,disabled,expanded,valueFilter]),handleOnchange=react.useCallback((selectedNodes=>{onChange([...selectedNodes],checkable),checkable||setExpanded(!1)}),[onChange,checkable]),handleKeyPress=react.useCallback((event=>{switch(event.keyCode){case 40:document.getElementById(componentId).querySelector(".ant-tree-list-holder-inner").firstElementChild.querySelector(".ant-tree-node-content-wrapper .ant-tree-title div").focus();break;case 9:handleCloseList();break;default:return}}),[componentId,handleCloseList]);return common_service.h.useClickOutside(wrapperRef,handleCloseList),(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsxs)("div",{className:classnames_default()("advance-tree-filter-master__container",className),ref:wrapperRef,children:[(0,jsx_runtime.jsx)("div",{onClick:handleExpand,className:classnames_default()("button-toggle p-l--sm p-t--xs p-r--xs p-b--xs",{"filter-active":checkable?listItem?.length>0:item,"active-bg":expanded}),children:(0,jsx_runtime.jsxs)("div",{className:"advance-tree-filter-master__title",children:[(0,jsx_runtime.jsxs)("span",{className:"filter-title",children:[checkable&&listItem?.length>0&&"("+listItem?.length+") ",label]}),(0,jsx_runtime.jsx)(bucket_2.yQ,{size:16})]})}),expanded&&(0,jsx_runtime.jsxs)("div",{className:"advance-tree-filter-master__box-search",children:[(0,jsx_runtime.jsx)("div",{className:"advance-tree-filter-master__input p--xs",children:(0,jsx_runtime.jsx)(InputText.A,{isSmall:!1,maxLength,onChange:handleSearchChange,placeHolder,suffix:(0,jsx_runtime.jsx)(bucket_14.vj,{size:16}),ref:inputRef,onKeyDown:handleKeyPress})}),(0,jsx_runtime.jsx)("div",{className:"advance-tree-filter-master__list",id:componentId,children:(0,jsx_runtime.jsx)(Tree.A,{items:listItem,getTreeData,selectedKey,onlySelectLeaf,checkedKeys:listIds,valueFilter:filter,checkStrictly,height:300,onChange:handleOnchange,selectable,checkable,render,titleRender:treeTitleRender,selectWithAdd:void 0,preferOptions,isExpand:expanded,maxLengthItem,buildTree,keyField})})]})]})})}AdvanceTreeFilterMaster_AdvanceTreeFilterMaster_AdvanceTreeFilterMaster.defaultProps={placeHolder:"Select TreeSelect...",searchProperty:"name",searchType:"contain",classFilter:react_3layer_common.y_,onlySelectLeaf:!1,checkable:!1,disabled:!1,selectable:!0,treeTitleRender:t=>t?.title,keyField:"id"};const AdvanceFilterMaster_AdvanceTreeFilterMaster_AdvanceTreeFilterMaster=AdvanceTreeFilterMaster_AdvanceTreeFilterMaster_AdvanceTreeFilterMaster;try{AdvanceTreeFilterMaster_AdvanceTreeFilterMaster_AdvanceTreeFilterMaster.displayName="AdvanceTreeFilterMaster",AdvanceTreeFilterMaster_AdvanceTreeFilterMaster_AdvanceTreeFilterMaster.__docgenInfo={description:"",displayName:"AdvanceTreeFilterMaster",props:{label:{defaultValue:null,description:"Label for current field",name:"label",required:!1,type:{name:"string"}},listItem:{defaultValue:null,description:"User-selected values",name:"listItem",required:!1,type:{name:"Model[]"}},item:{defaultValue:null,description:"User-selected value",name:"item",required:!1,type:{name:"Model"}},searchProperty:{defaultValue:{value:"name"},description:"The property name of the model filter you want to search in the list data",name:"searchProperty",required:!1,type:{name:"string"}},searchType:{defaultValue:{value:"contain"},description:"The type of searchProperty you want to search in the list data",name:"searchType",required:!1,type:{name:"string"}},checkable:{defaultValue:{value:"false"},description:"An optional to multiple check filter values",name:"checkable",required:!1,type:{name:"boolean"}},selectable:{defaultValue:{value:"true"},description:"Prop of AntdTreeProps",name:"selectable",required:!1,type:{name:"boolean"}},checkStrictly:{defaultValue:null,description:"Check treeNode precisely; parent treeNode and children treeNodes are not associated",name:"checkStrictly",required:!1,type:{name:"boolean"}},disabled:{defaultValue:{value:"false"},description:"Not allow to handle change filter",name:"disabled",required:!1,type:{name:"boolean"}},valueFilter:{defaultValue:null,description:"Value filter for api get data option",name:"valueFilter",required:!1,type:{name:"ModelFilter"}},placeHolder:{defaultValue:{value:"`Select TreeSelect...`"},description:"Placeholder of the component",name:"placeHolder",required:!1,type:{name:"string"}},selectedKey:{defaultValue:null,description:"Key of selected node",name:"selectedKey",required:!1,type:{name:"number"}},onlySelectLeaf:{defaultValue:{value:"false"},description:"Not allow to select the father item that contain a lot of items inside",name:"onlySelectLeaf",required:!1,type:{name:"boolean"}},getTreeData:{defaultValue:null,description:"API to get data",name:"getTreeData",required:!1,type:{name:"(TModelFilter?: ModelFilter) => Observable<Model[]>"}},onChange:{defaultValue:null,description:"Function to change selected items",name:"onChange",required:!1,type:{name:"(T: Model[], TT: boolean) => void"}},classFilter:{defaultValue:null,description:"Model filter class of API get list data",name:"classFilter",required:!1,type:{name:"new () => ModelFilter"}},render:{defaultValue:null,description:"Provide a function to render a specific property as name",name:"render",required:!1,type:{name:"(T: Model) => string"}},preferOptions:{defaultValue:null,description:"Prefer node item of tree",name:"preferOptions",required:!1,type:{name:"Model[]"}},maxLength:{defaultValue:null,description:"Set maximum length of text to search",name:"maxLength",required:!1,type:{name:"number"}},maxLengthItem:{defaultValue:null,description:"Set maximum length of data name display in each row of tree",name:"maxLengthItem",required:!1,type:{name:"number"}},className:{defaultValue:null,description:"Use to custom style the component",name:"className",required:!1,type:{name:"string"}},treeTitleRender:{defaultValue:{value:"(t: any) => t?.title"},description:"Prop of AntdTreeProps",name:"treeTitleRender",required:!1,type:{name:"(T: Model) => ReactNode"}},buildTree:{defaultValue:null,description:"Option to let developer can modify tree data",name:"buildTree",required:!1,type:{name:"(flatData: Model[]) => [TreeNode<Model>[], number[]]"}},keyField:{defaultValue:{value:"id"},description:"Key property when you want to customize build tree object",name:"keyField",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/AdvanceFilterMaster/AdvanceTreeFilterMaster/AdvanceTreeFilterMaster.tsx#AdvanceTreeFilterMaster"]={docgenInfo:AdvanceTreeFilterMaster_AdvanceTreeFilterMaster_AdvanceTreeFilterMaster.__docgenInfo,name:"AdvanceTreeFilterMaster",path:"src/components/AdvanceFilterMaster/AdvanceTreeFilterMaster/AdvanceTreeFilterMaster.tsx#AdvanceTreeFilterMaster"})}catch(__react_docgen_typescript_loader_error){}var es_radio=__webpack_require__("./node_modules/antd/es/radio/index.js");class DistrictFilter extends react_3layer_common.y_{id=new react_3layer_advance_filters_dist.s_;name=new react_3layer_advance_filters_dist.Kp;provinceId=new react_3layer_advance_filters_dist.s_}function reducerFunc(state,action){return"UPDATE_MODEL"===action.type?action.data:[...action.data]}const demoList=[{id:1,name:"Ban hành chính",code:"FAD",parentId:null},{id:2,name:"Ban công nghệ thông tinBan công nghệ thông tin",code:"FIM",parentId:1},{id:3,name:"Ban nhân sự",code:"FHR",parentId:null},{id:4,name:"Ban truyền thông",code:"FCC",parentId:2},{id:5,name:"Ban công nghệ",code:"FTI",parentId:4},{id:6,name:"Ban giám đốc",code:"BOD",parentId:3},{id:7,name:"Ban quản trị",code:"BOM",parentId:4}],list=[{id:9,name:"Phòng Muti Media",code:"MEDIA",parentId:null},{id:10,name:"Phòng truyền thông",code:"PTT",parentId:9}],demoItem={id:1,name:"Ban hành chính",code:"FAD",parentId:null},demoObservable=new Observable.c((observer=>{setTimeout((()=>{observer.next(demoList)}),500)})),demoSearchFunc=TModelFilter=>demoObservable,AdvanceTreeFilterMaster_stories={title:"AdvanceFilterMaster/AdvanceTreeFilterMaster",component:AdvanceFilterMaster_AdvanceTreeFilterMaster_AdvanceTreeFilterMaster,tags:["autodocs"],parameters:{controls:{expanded:!0},docs:{page:()=>(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.hE,{}),(0,jsx_runtime.jsx)(dist.Pd,{}),(0,jsx_runtime.jsx)(dist.VY,{}),(0,jsx_runtime.jsx)(dist.Tn,{}),(0,jsx_runtime.jsx)(dist.VY,{}),(0,jsx_runtime.jsx)(dist.uY,{story:dist.h1}),(0,jsx_runtime.jsx)(dist.om,{})]})}},args:{label:"Đơn vị tổ chức",placeHolder:"Chọn đơn vị",maxLength:200,maxLengthItem:30},argTypes:{label:{control:"text"},placeHolder:{}}},Template=args=>{const[listItem,dispatch]=react.useReducer(reducerFunc,demoList),[item,setItem]=react.useState(demoItem),[isMultiple,setMultiple]=react.useState(!1),handleChangeRadio=react.useCallback((event=>{event.target.value?setItem(new react_3layer_common.Kx):dispatch({type:"UPDATE_MODEL",data:[]}),setMultiple(event.target.value)}),[]),handleChangeItem=react.useCallback(((items,isMultiple)=>{isMultiple?dispatch({type:"UPDATE_MODEL",data:items}):setItem(items[0])}),[]);return(0,jsx_runtime.jsxs)("div",{style:{margin:"10px",width:"300px"},children:[(0,jsx_runtime.jsx)("div",{style:{margin:"10px",width:"300px"},children:(0,jsx_runtime.jsx)(AdvanceFilterMaster_AdvanceTreeFilterMaster_AdvanceTreeFilterMaster,{...args,classFilter:DistrictFilter,onChange:handleChangeItem,item:isMultiple?void 0:item,listItem:isMultiple?listItem:[],checkable:isMultiple,selectable:!isMultiple,getTreeData:demoSearchFunc,preferOptions:args?.isSelectWithPreferOption?list:void 0,render:t=>t?.code})}),(0,jsx_runtime.jsx)("div",{style:{margin:"10px",width:"300px"},children:(0,jsx_runtime.jsxs)(es_radio.Ay.Group,{onChange:handleChangeRadio,value:isMultiple,children:[(0,jsx_runtime.jsx)(es_radio.Ay,{value:!1,children:"Single"}),(0,jsx_runtime.jsx)(es_radio.Ay,{value:!0,children:"Multiple"})]})})]})};Template.displayName="Template";const Default=Template.bind({}),__namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'args => {\n  const [listItem, dispatch] = React.useReducer(reducerFunc, demoList);\n  const [item, setItem] = React.useState(demoItem);\n  const [isMultiple, setMultiple] = React.useState(false);\n  const handleChangeRadio = React.useCallback(event => {\n    if (event.target.value) setItem(new Model());else dispatch({\n      type: "UPDATE_MODEL",\n      data: []\n    });\n    setMultiple(event.target.value);\n  }, []);\n  const handleChangeItem = React.useCallback((items, isMultiple) => {\n    // eslint-disable-next-line no-debugger\n    debugger;\n    if (isMultiple) {\n      dispatch({\n        type: "UPDATE_MODEL",\n        data: items\n      });\n    } else {\n      setItem(items[0]);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxs("div", {\n    style: {\n      margin: "10px",\n      width: "300px"\n    },\n    children: [/*#__PURE__*/_jsx("div", {\n      style: {\n        margin: "10px",\n        width: "300px"\n      },\n      children: /*#__PURE__*/_jsx(AdvanceTreeFilterMaster, {\n        ...args,\n        classFilter: DistrictFilter,\n        onChange: handleChangeItem,\n        item: isMultiple ? undefined : item,\n        listItem: isMultiple ? listItem : [],\n        checkable: isMultiple,\n        selectable: !isMultiple,\n        getTreeData: demoSearchFunc,\n        preferOptions: args?.isSelectWithPreferOption ? list : undefined,\n        render: t => t?.code\n      })\n    }), /*#__PURE__*/_jsx("div", {\n      style: {\n        margin: "10px",\n        width: "300px"\n      },\n      children: /*#__PURE__*/_jsxs(Radio.Group, {\n        onChange: handleChangeRadio,\n        value: isMultiple,\n        children: [/*#__PURE__*/_jsx(Radio, {\n          value: false,\n          children: "Single"\n        }), /*#__PURE__*/_jsx(Radio, {\n          value: true,\n          children: "Multiple"\n        })]\n      })\n    })]\n  });\n}',...Default.parameters?.docs?.source}}}}}]);